{"version":3,"sources":["pages/Home.js","context/auth.js","pages/Admin.js","pages/PrivateRoute.js","pages/Login.js","pages/Signup.js","pages/NewMovie.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useState","movies","setMovies","page","setPage","searchVal","setSearchVal","useEffect","getAllMovies","length","searchMovies","a","axios","get","data","changePage","jumpSize","className","id","type","placeholder","onChange","e","value","target","map","movie","name","director","genres","genre","href","imdb_score","onClick","_","AuthContext","createContext","useAuth","useContext","Admin","editMode","setEditMode","editData","setEditData","authTokens","console","log","toggleEditMode","updateMovie","token_type","access_token","put","headers","resp","popularity","PrivateRoute","Component","component","rest","isAdmin","render","to","Login","isLoggedIn","setLoggedIn","isError","setIsError","userName","setUserName","password","setPassword","history","useHistory","setAuthTokens","setIsAdmin","role","push","bodyFormData","FormData","append","post","result","status","initialState","username","email","confirmPassword","Signup","user","setUser","changeHandler","key","index","isEmailValid","test","String","toLowerCase","isPasswordValid","isFormValid","saveUser","alert","checked","disabled","NewMovie","setMovie","saveMovie","isNaN","class","splice","removeGenre","App","existingTokens","JSON","parse","localStorage","getItem","Provider","setItem","stringify","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6320909.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n\nfunction Home(props) {\n  const [movies, setMovies] = useState([])\n  const [page, setPage] = useState(1)\n  const [searchVal, setSearchVal] = useState('')\n\n  useEffect(() => {\n    getAllMovies();\n  }, [page])\n  useEffect(() => {\n    if(searchVal.length >=3 || searchVal.length === 0)\n    searchMovies();\n  }, [searchVal])\n\n  const getAllMovies = async () => {\n    let {data: movies} = await axios.get(`/movies/all?page=${page}`)\n    setMovies(movies)\n  }\n  const searchMovies = async () => {\n    let {data: movies} = await axios.get(`/movies/search?page=${page}&query=${searchVal}`)\n    setMovies(movies)\n  }\n\n  const changePage = jumpSize => {\n    if(jumpSize < 0 && page == 1) return;\n    if(jumpSize > 0 && movies.length < 10) return;\n    setPage(page + jumpSize)\n  }\n  const searchChange = e => {\n    const { value } = e.target;\n    setSearchVal(value)\n  }\n  // const searchClear = e => {\n  //   setSearchVal('')\n  // }\n  return (\n    <div className=\"row\">\n      <div className=\"p-5 w-100\">\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\" id=\"basic-addon2\">Search</span>\n          </div>\n          <input type=\"text\" className=\"form-control\" placeholder=\"Movie/Director Name\" onChange={searchChange}/>\n          {/* <div className=\"input-group-append\" onChange={searchClear}>\n            <span className=\"btn btn-outline-secondary\" id=\"basic-addon2\">Clear</span>\n          </div>\n          <div className=\"input-group-append\" onClick={searchMovies}>\n            <span className=\"btn btn-outline-secondary\" id=\"basic-addon2\">Search</span>\n          </div> */}\n        </div>\n      </div>\n      {movies.map(movie => (\n          <div key={movie.id} className=\"col-sm-6\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{movie.name}</h5>\n                <p className=\"card-text\">{movie.director}</p>\n                {movie.genres.map(genre => {\n                  return <a className=\"badge badge-dark\">{genre.name}</a>\n                })}\n                <br/>\n                <a href=\"#\" className=\"badge badge-primary\">IMDB Score: {movie.imdb_score}</a>\n              </div>\n            </div>\n          </div>\n      ))}\n      <div className=\"d-flex justify-content-center full-width w-100 p-3\">\n        {\n          page > 1\n          ?  <button className=\"btn btn-secondary mr-3\" onClick={_ => changePage(-1)}>Prev</button>\n          : null\n        }\n        page {page}\n        {\n          movies.length === 10\n          ? <button className=\"btn btn-secondary ml-3\" onClick={_ => changePage(1)}>Next</button>\n          : null\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import { createContext, useContext } from 'react';\n\nexport const AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"../context/auth\";\n\nfunction Admin(props) {\n  const [movies, setMovies] = useState([])\n  const [editMode, setEditMode] = useState({})\n  const [editData, setEditData] = useState({})\n  const [page, setPage] = useState(1)\n  const { authTokens } = useAuth()\n  useEffect(() => {\n    getAllMovies();\n  }, [0]);\n\n  const getAllMovies = async () => {\n    let {data: movies} = await axios.get('/movies/all')\n    console.log({movies})\n    setMovies(movies)\n    let editData = {}\n    movies.map(movie => {\n      editData[movie.id] = movie;\n    })\n    setEditData(editData)\n  }\n  const toggleEditMode = movie => {\n    setEditMode({\n      ...editMode,\n      [movie.id]: !editMode[movie.id]\n    })\n  };\n  const updateMovie = async movie => {\n    const { token_type, access_token } = authTokens || {};\n    const resp = await axios.put('/movie/', movie, {\n      headers: {\n        'Authorization': ` ${token_type} ${access_token}`\n      }\n    });\n    console.log({resp})\n  }\n  \n  const changePage = jumpSize => {\n    if(jumpSize < 0 && page == 1) return;\n    if(jumpSize > 0 && movies.length < 10) return;\n    setPage(page + jumpSize)\n  }\n  return (\n    <div className=\"row\">\n      {movies.map(movie => (\n          <div key={movie.id} className=\"col-sm-6\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                {\n                  editMode[movie.id] \n                    ? (\n                      <>\n                        <input className=\"card-title\" value={editData[movie.id].name}/>\n                        <input className=\"card-title\" value={editData[movie.id].director}/>\n                        <input className=\"card-title\" value={editData[movie.id].imdb_score}/>\n                        <input className=\"card-title\" value={editData[movie.id].popularity}/>\n                        {movie.genres.map(genre => {\n                          return <a className=\"badge badge-dark\">{genre.name}</a>\n                        })}\n                        <div>\n                          <button className=\"btn btn-danger pull-right\" onClick={_ => toggleEditMode(movie)}>Cancel</button>\n                          <button className=\"btn btn-primary pull-right\" onClick={_ => updateMovie(movie)}>Save</button>\n                        </div>\n                      </>\n                    )\n                    : (\n                      <>\n                        <h5 className=\"card-title\">{movie.name}</h5>\n                        <p className=\"card-text\">{movie.director}</p>\n                        {movie.genres.map(genre => {\n                          console.log({genre})\n                          return <a className=\"badge badge-dark\">{genre.name}</a>\n                        })}\n                        <a href=\"#\" className=\"badge badge-primary\">IMDB Score: {movie.imdb_score}</a>\n                        <div>\n                          <button className=\"btn btn-primary pull-right\" onClick={_ => toggleEditMode(movie)}>Edit</button>\n                        </div>\n                      </>\n                    )\n                }\n                \n              </div>\n            </div>\n          </div>\n      ))}\n      \n      <div className=\"d-flex justify-content-center full-width w-100 p-3\">\n        {\n          page > 1\n          ?  <button className=\"btn btn-secondary mr-3\" onClick={_ => changePage(-1)}>Prev</button>\n          : null\n        }\n        page {page}\n        {\n          movies.length === 10\n          ? <button className=\"btn btn-secondary ml-3\" onClick={_ => changePage(1)}>Next</button>\n          : null\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Admin;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../context/auth\";\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n  const { authTokens, isAdmin } = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authTokens && isAdmin ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;","import React, { useEffect, useState } from \"react\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useAuth } from \"../context/auth\";\n\nfunction Login() {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  let history = useHistory()\n  const { setAuthTokens, setIsAdmin, authTokens } = useAuth();\n\n  useEffect(async () => {\n    const { token_type, access_token } = authTokens || {};\n    let user = await axios.get('/users/me',{\n      headers: {\n          'Authorization': ` ${token_type} ${access_token}`\n      }\n    });\n    if(user.data.role === 'admin') {\n      setIsAdmin(true)\n    } else {\n      setIsAdmin(false)\n    }\n    history.push('/admin')\n  }, [isLoggedIn])\n  var bodyFormData = new FormData();\n  async function postLogin() {\n    bodyFormData.append('username', userName);\n    bodyFormData.append('password', password);\n    try {\n      let result = await axios.post(\"/token\", bodyFormData, {\n          headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n          }\n      })\n      console.log({result})\n      if (result.status === 200) {\n        setAuthTokens(result.data);\n        setLoggedIn(true);\n      } else {\n        setIsError(true);\n      }\n      \n      // history.push('/')\n    } catch (error) {\n      setIsError(true);\n    }\n  }\n  return (\n    <div className=\"card\">\n      {/* <img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\"> */}\n      <div className=\"card-body\">\n            <div className=\"form-group\">\n                <input\n                    type=\"username\"\n                    value={userName}\n                    onChange={e => {\n                        setUserName(e.target.value);\n                    }}\n                    placeholder=\"email\"\n                />\n\n            </div>\n            <input\n            type=\"password\"\n            value={password}\n            onChange={e => {\n                setPassword(e.target.value);\n            }}\n            placeholder=\"password\"\n            />\n            <button onClick={postLogin}>Sign In</button>\n            <div>\n            <Link to=\"/signup\">Don't have an account?</Link>\n                { isError && 'The username or password provided were incorrect!' }\n\n            </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default Login;","import React, { useState } from \"react\";\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\nconst initialState = {\n  username: '',\n  email: '',\n  role: '',\n  password: '',\n  confirmPassword: ''\n}\nfunction Signup() {\n  const [user, setUser] = useState(initialState)\n  const history = useHistory()\n  const changeHandler = (key, index) => e => {\n    const { value } = e.target || { value: e };\n    console.log({[key]: value})\n    setUser({\n      ...user,\n      [key]: value\n    })\n  }\n  // The api should also have validation because the form can be modified from inspect element\n  const isEmailValid = email => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n  const isPasswordValid = password => {\n    let regx = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/\n    return regx.test(password)\n  }\n  const isFormValid = () => {\n    const { username, email, role, password, confirmPassword } = user;\n    console.log({ password, confirmPassword})\n    return !!username && !!email && !!role && (password === confirmPassword)\n  }\n  const saveUser = async () => {\n    if(!isEmailValid(user.email)) {\n      alert('Please enter a valid email')\n      return;\n    }\n    if(!isPasswordValid(user.password)) {\n      alert('Password must be minimum eight characters with at least one letter and one number')\n      return;\n    }\n    if(!isFormValid()) {\n      alert('Please fill in all details. Also ensure password matches with confirm password')\n      return;\n    }\n    user.genre = user.genres;\n    try {\n      const resp = await axios.post('/users/', user);\n      if(resp.status === 201) {\n        alert('Saved successfully')\n        history.push('/')\n      } else {\n        alert('There was an error')\n      }\n    } catch (error) {\n      alert('There was an error.')\n    }\n  }\n  return (\n    <div className=\"d-flex justify-content-center align-items-center w-100 p-5\">\n      <div className=\"card\">\n        <div className=\"card-body\">\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <label className=\"input-group-text\">Username</label>\n          </div>\n          <input className=\"form-control\" onChange={changeHandler('username')} value={user.username}/>\n        </div>\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <label className=\"input-group-text\">Email</label>\n          </div>\n          <div>\n            <input type=\"email\" className=\"form-control\" onChange={changeHandler('email')} value={user.email}/>\n          </div>\n          {\n            user.email && !isEmailValid(user.email)\n            ? <div>Please enter a valid email ID</div>\n            : ''\n          }\n        </div>\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <label className=\"input-group-text\">Password</label>\n          </div>\n          <input type=\"password\" className=\"form-control\" onChange={changeHandler('password')} value={user.password}/>\n          \n        </div>\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <label className=\"input-group-text\">Confirm Password</label>\n          </div>\n          <input type=\"password\" className=\"form-control\" onChange={changeHandler('confirmPassword')} value={user.confirmPassword}/>\n          {\n            user.password !== user.confirmPassword\n            ? <p>Passwords do not match!</p>\n            : ''\n          }\n        </div>\n        <div className=\"input-group\" onClick={_ => changeHandler('role')('admin')}>\n          <div className=\"input-group-prepend\">\n            <div className=\"input-group-text\">\n              <input type=\"radio\" checked={user.role === 'admin'}/>\n            </div>\n          </div>\n          <input disabled type=\"text\" className=\"form-control\" value=\"Admin\"/>\n        </div>\n        <div className=\"input-group\" onClick={_ => changeHandler('role')('user')}>\n          <div className=\"input-group-prepend\">\n            <div className=\"input-group-text\">\n              <input type=\"radio\" checked={user.role === 'user'}/>\n            </div>\n          </div>\n          <input disabled type=\"text\" className=\"form-control\" value=\"User\"/>\n        </div>\n      </div>\n\n      {\n        user.password && !isPasswordValid(user.password)\n        ? <p>Password must be minimum eight characters with at least one letter and one number</p>\n        : ''\n      }\n      <button disabled={!isFormValid() || !isPasswordValid(user.password) || !isEmailValid(user.email)} className=\"btn btn-primary pull-right\" onClick={_ => saveUser()}>Save</button>\n    </div>\n  </div>\n  );\n}\n\nexport default Signup;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"../context/auth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst initialState = {\n  name: '',\n  director: '',\n  imdb_score: 0,\n  popularity: 0,\n  genres: [{\n    name: ''\n  }]\n}\nfunction NewMovie(props) {\n  const [movie, setMovie] = useState(initialState)\n  const history = useHistory()\n  const { authTokens } = useAuth()\n  const saveMovie = async () => {\n      if(!isFormValid()) {\n        return;\n      }\n      movie.genre = movie.genres;\n      const { token_type, access_token } = authTokens || {};\n      try {\n        const resp = await axios.post('/movie/', movie, {\n          headers: {\n              'Authorization': ` ${token_type} ${access_token}`\n          }\n        });\n        if(resp.status === 201) {\n          alert('Saved successfully')\n          history.push('/')\n        } else {\n          alert('There was an error')\n        }\n      } catch (error) {\n        alert('There was an error. Please make sure you are logged in as admin')\n      }\n  }\n  const isFormValid = () => {\n    if(!movie.name || !movie.director) {\n      alert('Invalid details! Please fill all details')\n      return false;\n    }\n    if(movie.imdb_score < 0 || movie.imdb_score > 10) {\n      alert('IMDB score must be between 0 to 10')\n      return false\n    }\n    if(movie.popularity < 0 || movie.popularity > 100) {\n      alert('Popularity score must be between 0 to 100')\n      return false\n    }\n    return true\n  }\n  const changeHandler = (key, index) => e => {\n    const { value } = e.target;\n    if(key === 'genre' && !isNaN(index)) {\n      let genres = [...movie.genres]\n      genres[index].name = value;\n      setMovie({\n        ...movie,\n        genres,\n        [key]: value\n      })\n      return;\n    }\n    setMovie({\n      ...movie,\n      [key]: value\n    })\n  }\n  const addGenre = () => {\n    const genres = [...movie.genres];\n    genres.push({ name: '' })\n    setMovie({\n      ...movie,\n      genres\n    })\n  }\n  const removeGenre = (index) => {\n    const genres = [...movie.genres];\n    genres.splice(index,1);\n    setMovie({\n      ...movie,\n      genres\n    })\n  }\n  return (\n      <div className=\"row\">\n          <div className=\"d-flex justify-content-center align-items-center w-100 p-5\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <label className=\"input-group-text\">movie name</label>\n                  </div>\n                  <input className=\"form-control\" onChange={changeHandler('name')} value={movie.name}/>\n                </div>\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <label className=\"input-group-text\">director</label>\n                  </div>\n                  <input className=\"form-control\" onChange={changeHandler('director')} value={movie.director}/>\n                </div>\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <label className=\"input-group-text\">popularity</label>\n                  </div>\n                  <input type=\"number\" className=\"form-control\" onChange={changeHandler('popularity')} value={movie.popularity}/>\n                </div>\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <label className=\"input-group-text\">imdb score</label>\n                  </div>\n                  <input type=\"number\" className=\"form-control\" onChange={changeHandler('imdb_score')} value={movie.imdb_score}/>\n                </div>\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <label className=\"input-group-text\">Genres</label>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                      {\n                        movie.genres.map((genre, index) => \n                          <div>\n                            <div class=\"input-group pr-1 pb-1\">\n                              <input type=\"text\" className=\"form-control\" onChange={changeHandler('genre', index)} value={genre.name}/>\n                              {\n                                movie.genres.length > 1 \n                                ? <div class=\"input-group-append\">\n                                    <button className=\"btn btn-danger\" onClick={_ => removeGenre(index)}>Remove</button>\n                                  </div>\n                                : null\n                              }\n                            </div>\n                            \n                          </div>\n                        )\n                      }\n                    </div>\n                      </div>\n                      <button className=\"btn btn-secondary\" onClick={addGenre}>+ Add Genre</button>\n                  </div>\n                  <button className=\"btn btn-primary pull-right\" onClick={_ => saveMovie()}>Save</button>\n                </div>\n              </div>\n          </div>\n  );\n}\n\nexport default NewMovie;","import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport axios from 'axios'\nimport { BrowserRouter as Router, Link, Route, useHistory } from 'react-router-dom';\nimport Home from \"./pages/Home\";\nimport Admin from \"./pages/Admin\";\nimport PrivateRoute from './pages/PrivateRoute';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport NewMovie from './pages/NewMovie';\nimport { AuthContext } from './context/auth';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const existingTokens = JSON.parse(localStorage.getItem(\"tokens\"));\n  const [authTokens, setAuthTokens] = useState(existingTokens);\n  const [isAdmin, setIsAdmin] = useState(false);\n  let history = useHistory()\n  const setTokens = (data) => {\n    localStorage.setItem(\"tokens\", JSON.stringify(data));\n    setAuthTokens(data);\n  }\n  function logOut() {\n    setAuthTokens();\n  }\n  return (\n    <div className=\"App\">\n      <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens, setIsAdmin, isAdmin }}>\n        <Router>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n              <Link to=\"/\" className=\"navbar-brand\">\n                Fynd's IMDB\n              </Link>\n              <ul className=\"navbar-nav\">\n                <Link to=\"/\" className=\"navbar-brand\">\n                  <li className=\"nav-item active\">\n                    Home\n                  </li>\n                </Link>\n                \n                {authTokens \n                ? (\n                    <>\n                    {\n                      isAdmin\n\n                      ? (\n                        <>\n                          <Link to=\"/admin\" className=\"navbar-brand\">\n                              <li className=\"nav-item\">\n                                Admin\n                              </li>\n                            </Link>\n                            <Link to=\"/newMovie\" className=\"navbar-brand\">\n                            <li className=\"nav-item\">\n                              New Movie\n                            </li>\n                          </Link>\n                        </>\n                      )\n                      : null\n                    }\n                      <li className=\"nav-item\" onClick={logOut}>\n                          Logout\n                      </li>\n                    </>\n                ) : (\n                  <Link to=\"/login\" className=\"navbar-brand\">\n                    <li className=\"nav-item\">\n                      Login\n                    </li>\n                  </Link>\n                )}\n              </ul>\n          </nav>\n          <div>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Signup} />\n            <PrivateRoute path=\"/admin\" component={Admin} />\n            <PrivateRoute path=\"/newMovie\" component={NewMovie} />\n          </div>\n        </Router>\n      </AuthContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}